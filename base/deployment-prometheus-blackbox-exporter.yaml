---
kind: "Deployment"
apiVersion: "apps/v1"
metadata:
  annotations: {}
  name: "prometheus-blackbox-exporter"
  labels:
    helm.sh/chart: "prometheus-blackbox-exporter-5.8.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "prometheus-blackbox-exporter"
    app.kubernetes.io/instance: "bb-exp"
    app.kubernetes.io/version: "0.20.0"
    app.kubernetes.io/component: "deployment.prometheus-blackbox-exporter"
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: "prometheus-blackbox-exporter"
      app.kubernetes.io/instance: "bb-exp"
    matchExpressions: []
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations: {}
      labels:
        helm.sh/chart: "prometheus-blackbox-exporter-5.8.1"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/name: "prometheus-blackbox-exporter"
        app.kubernetes.io/instance: "bb-exp"
        app.kubernetes.io/version: "0.20.0"
        app.kubernetes.io/component: "deployment.prometheus-blackbox-exporter"
    spec:
      imagePullSecrets:
      - name: regcred
      restartPolicy: "Always"
      terminationGracePeriodSeconds: 30
      nodeSelector: {}
      serviceAccountName: "prometheus-blackbox-exporter"
      serviceAccount: "prometheus-blackbox-exporter"
      automountServiceAccountToken: true
      schedulerName: "default-scheduler"
      dnsPolicy: "ClusterFirst"
      volumes:
      - name: "config"
        configMap:
          defaultMode: 420
          name: "prometheus-blackbox-exporter"
      containers:
      - name: "blackbox-exporter"
        image: "artifactory.trinet-devops.com:443/docker/cloudops/blackbox-exporter:v0.20.0"
        command: []
        args:
        - "--config.file=/config/blackbox.yaml"
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"
        imagePullPolicy: "IfNotPresent"
        ports:
        - name: "http"
          containerPort: 9115
          protocol: "TCP"
        volumeMounts:
        - name: "config"
          mountPath: "/config"
        livenessProbe:
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
          httpGet:
            path: "/health"
            port: "http"
            scheme: "HTTP"
        readinessProbe:
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
          httpGet:
            path: "/health"
            port: "http"
            scheme: "HTTP"
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_RAW
          readOnlyRootFilesystem: true
        resources:
          limits: {}
          requests: {}
      securityContext:
        supplementalGroups: []
